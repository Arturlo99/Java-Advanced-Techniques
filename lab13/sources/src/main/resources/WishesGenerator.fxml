<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.ComboBox?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.ListView?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.layout.Pane?>
<?import javafx.scene.text.Font?>
<?language javascript?>

<Pane fx:id="mainPane" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="560.0" prefWidth="581.0" xmlns="http://javafx.com/javafx/16" xmlns:fx="http://javafx.com/fxml/1">

   <fx:script>
      var tFile = Java.type("java.io.File");
      var ObservableList = Java.type("javafx.collections.ObservableList");
      var WishesGenerator = Java.type("app.WishesGenerator");
      var System = Java.type("java.lang.System");
      var String = Java.type("java.lang.String");
      var DirectoryChooser = Java.type("javafx.stage.DirectoryChooser");
      var StringBuilder = Java.type("java.lang.StringBuilder");
      var BufferedReader = Java.type("java.io.BufferedReader");
      var FileReader = Java.type("java.io.FileReader");
      var templatesDir;
      var nextWishesCounter = 0;

      var guiStyles = ["Klasyczny", "Szary", "Niebieski"];
      var strategies = ["Losowo", "Kolejno", "Najdłuższe", "Najkrótsze"];

      function setTemplatesListView() {
         templatesListView.getItems().clear();
         var file = new tFile(templatesDir);
         var files = file.listFiles();
         if(files != null) {
            for(i in files) {
               templatesListView.getItems().add(files[i].getName());
               templatesListView.refresh();
            }
         }
      }

      function chooseTemplatesDirBtnAction(){
         var directoryChooser = new DirectoryChooser();
         directoryChooser.setInitialDirectory(new tFile(System.getProperty("user.dir")));
         tempTemplatesDir = directoryChooser.showDialog(null);
         if(tempTemplatesDir != null){
            templatesDir = tempTemplatesDir;
            setTemplatesListView()
         }
      }

      function setUpGuiStyleComboBox() {
         guiStyleComboBox.getItems().addAll(guiStyles);
         guiStyleComboBox.getSelectionModel().select(0);
      }

      function setUpStrategyComboBox() {
         strategyComboBox.getItems().addAll(strategies);
         strategyComboBox.getSelectionModel().select(0);
      }

      function generateLongestWishes(files){
         var maxWishesLength = getFileText(files[0]).length();
         var wishesId = 0;
         for (i in files){
            wishesLength = getFileText(files[i]).length();
            if( wishesLength > maxWishesLength){
               maxWishesLength = wishesLength
               wishesId = i;
            }
         }
         wishesTxtArea.setText(getFileText(files[wishesId]));
      }

      function generateShortestWishes(files){
         var minWishesLength = getFileText(files[0]).length();
         var wishesId = 0;
         for (i in files){
            wishesLength = getFileText(files[i]).length();
            if( wishesLength &lt; minWishesLength){
               minWishesLength = wishesLength
               wishesId = i;
            }
         }
         wishesTxtArea.setText(getFileText(files[wishesId]));
      }

      function generateRandomWishes(files){
         var wishesId = Math.floor(Math.random() * files.length);
         wishesTxtArea.setText(getFileText(files[wishesId]));
      }

      function generateNextWishes(files){
         var wishesId = nextWishesCounter % files.length;
         wishesTxtArea.setText(getFileText(files[wishesId]));
         nextWishesCounter++;
      }

      function generateWishesBtnAction(){
         var selectedTemplateName = templatesListView.getSelectionModel().getSelectedItem();
         if( selectedTemplateName != null &amp;&amp; !nameTxtField.getText().equals("")){
            var id = strategyComboBox.getSelectionModel().getSelectedIndex();
            var file = new tFile(this.templatesDir + "/" + templatesListView.getSelectionModel().getSelectedItem());
            var files = file.listFiles();
            switch(id) {
            case 0:
               generateRandomWishes(files);
               break;
            case 1:
               generateNextWishes(files);
               break;
            case 2:
               generateLongestWishes(files);
               break;
            case 3:
               generateShortestWishes(files);
               break;
            default:
               break;
            }
         }
      }

      function guiStyleComboBoxAction() {
      var id = guiStyleComboBox.getSelectionModel().getSelectedIndex();
      var scene = mainPane.getScene();
      scene.getStylesheets().clear();

      switch(id) {
         case 0:
            scene.getStylesheets().add(WishesGenerator.class.getResource("/css/classic.css").toExternalForm());
            break;
         case 1:
            scene.getStylesheets().add(WishesGenerator.class.getResource("/css/grey.css").toExternalForm());
            break;
         case 2:
            scene.getStylesheets().add(WishesGenerator.class.getResource("/css/blue.css").toExternalForm());
            break;
         default:
            break;
         }
      }

      function getFileText(file){
      var st;
      var sb = new StringBuilder();
      var br = new BufferedReader(new FileReader(file));
      while ((st = br.readLine()) != null){
         sb.append(new String(st.getBytes(), "UTF-8") + "\n");
         }
      return sb.toString().replace("{1}",nameTxtField.getText());
      }
   </fx:script>
   <children>
      <TextField fx:id="nameTxtField" layoutX="117.0" layoutY="103.0" prefHeight="25.0" prefWidth="150.0" />
      <Label layoutX="68.0" layoutY="107.0" text="Imię:" />
      <ComboBox fx:id="strategyComboBox" layoutX="117.0" layoutY="139.0" prefWidth="150.0" />
      <Label layoutX="14.0" layoutY="143.0" text="Strategia wyboru:" textAlignment="CENTER" />
      <TextArea fx:id="wishesTxtArea" editable="false" layoutX="294.0" layoutY="63.0" prefHeight="336.0" prefWidth="269.0" />
      <ListView fx:id="templatesListView" layoutX="109.0" layoutY="204.0" prefHeight="163.0" prefWidth="167.0" />
      <Label layoutX="176.0" layoutY="4.0" text="Generator życzeń na różne okazje">
         <font>
            <Font size="14.0" />
         </font>
      </Label>
      <Label layoutX="42.0" layoutY="271.0" text="Szablony:" />
      <ComboBox fx:id="guiStyleComboBox" layoutX="117.0" layoutY="67.0" onAction="guiStyleComboBoxAction()" prefWidth="150.0" />
      <Label layoutX="30.0" layoutY="71.0" text="Styl interfejsu:" />
      <Label layoutX="399.0" layoutY="46.0" text="Życzenia" />
      <Button fx:id="generateWishesBtn" layoutX="196.0" layoutY="437.0" mnemonicParsing="false" onAction="generateWishesBtnAction()" prefHeight="46.0" prefWidth="142.0" text="Generuj życzenia" textAlignment="CENTER">
         <font>
            <Font size="16.0" />
         </font></Button>
      <Button fx:id="chooseTemplatesDirBtn" layoutX="109.0" layoutY="374.0" mnemonicParsing="false" onAction="chooseTemplatesDirBtnAction()" prefHeight="25.0" prefWidth="167.0" text="Wybierz folder z szablonami" />
   </children>
   <fx:script>
      setUpGuiStyleComboBox();
      setUpStrategyComboBox();
   </fx:script>
</Pane>
